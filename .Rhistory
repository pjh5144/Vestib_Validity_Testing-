b=NULL
for (i in 1:ran){
df$i<-ifelse(df$Total_C>=i,1,0)
i<-df%>%
group_by(i)%>%
filter(!is.na(i))%>%
summarise(mean=round(means(!!y),3),Total_Central_Pt=n())%>% #Unquote variable for dplyr functioning
mutate(!!name:=mean[i==0]-mean[i==1])%>% #Set mutation to variable name
filter(i==1)%>%
select(!!name,Total_Central_Pt) #select particular variable
c=rbind(c,i)
#e<-df%>%
#  summarise(D=cohen.d(!!y,i,na.rm=TRUE)$estimate)
#b=rbind(b,e)
}
#kable(cbind(c,b))
c<-c
}
mymerge<-function(x,y){
merge(x,y,all=TRUE,by="Total_Central_Pt")}
NSI<-mean_comp(final_df,NSI_Tot_Score,10)
PCLM<-mean_comp(final_df,PCLM_Tot_Score,10) ##utilize this with standardized values (true meaning of delta)
ABC<-mean_comp(final_df,ABC_Tot_Score,10)
PHQ<-mean_comp(final_df,PHQ9_Tot_Score,10)
GAD<-mean_comp(final_df,GAD7_Tot_Score,10)
DHI<-mean_comp(final_df,DHI_Tot_Score,10)
FGA<-mean_comp(final_df,FGA,10)
SOT<-mean_comp(final_df,SOT,10)
Surveys<-Reduce(mymerge, list(DHI,GAD,NSI,PCLM,PHQ))
#kable(Surveys)
Surveys$C<-c(10:1)
sur_plot<-Surveys[,-1]
sur_plot<-melt(sur_plot,id.var="C")
g<-ggplot(sur_plot,aes(x=factor(C),y=value))+geom_point(aes(colour=variable))+geom_hline(yintercept=0)+geom_line(aes(colour=variable,group=variable))+xlab("Central Value Cutoff")+ylab("Differences in Score")+ggtitle("Comparing Total Central Sign Cutoffs Against Differences in Survey Scores")+theme(plot.title=element_text(hjust=0.5))
ggplotly(g)
# Chunk 9: plots ext
Surveys<-Reduce(mymerge, list(ABC,FGA,SOT))
#kable(Surveys)
Surveys$C<-c(10:1)
sur_plot<-Surveys[,-1]
sur_plot<-melt(sur_plot,id.var="C")
g<-ggplot(sur_plot,aes(x=factor(C),y=value))+geom_point(aes(colour=variable))+geom_hline(yintercept=0)+geom_line(aes(colour=variable,group=variable))+xlab("Central Value Cutoff")+ylab("Differences in Score")+ggtitle("Comparing Total Central Sign Cutoffs Against Differences in Testing Scores")+theme(plot.title=element_text(hjust=0.5))
ggplotly(g)
NSI_Q1<-mean_comp(final_df,NSI_Q1,10)
NSI_Q2<-mean_comp(final_df,NSI_Q2,10)
NSI_Q3<-mean_comp(final_df,NSI_Q3,10)
NSI_Q4<-mean_comp(final_df,NSI_Q4,10)
NSI_Q5<-mean_comp(final_df,NSI_Q5,10)
Surveys<-Reduce(mymerge, list(NSI_Q1,NSI_Q2,NSI_Q3,NSI_Q4,NSI_Q5))
Surveys$C<-c(10:1)
sur_plot<-Surveys[,-1]
sur_plot<-melt(sur_plot,id.var="C")
g<-ggplot(sur_plot,aes(x=factor(C),y=value))+geom_point(aes(colour=variable))+geom_hline(yintercept=0)+geom_line(aes(colour=variable,group=variable))+xlab("Central Value Cutoff")+ylab("Differences in Score")+ggtitle("Comparing Total Central Sign Cutoffs Against Differences in Testing Scores")+theme(plot.title=element_text(hjust=0.5))
ggplotly(g)
Fu<-mean_comp(dhi,Fu,10)
E<-mean_comp(dhi,E,10)
P<-mean_comp(dhi,P,10)
Surveys<-Reduce(mymerge, list(Fu,E,P))
Surveys$C<-c(10:1)
sur_plot<-Surveys[,-1]
sur_plot<-melt(sur_plot,id.var="C")
g<-ggplot(sur_plot,aes(x=factor(C),y=value))+geom_point(aes(colour=variable))+geom_hline(yintercept=0)+geom_line(aes(colour=variable,group=variable))+xlab("Central Value Cutoff")+ylab("Differences in Score")+ggtitle("Comparing Total Central Sign Cutoffs Against Differences in Testing Scores")+theme(plot.title=element_text(hjust=0.5))
ggplotly(g)
# Chunk 10: comp
#ref: http://little-book-of-r-for-multivariate-analysis.readthedocs.io/en/latest/src/multivariateanalysis.html
aov_data<-dhi%>%
select('NSI_Q1','NSI_Q2','NSI_Q3','NSI_Q4','NSI_Q5','P','Fu','E','Total_C','NSI_Q6','ABC_Tot_Score','NSI_Tot_Score','PCLM_Tot_Score','PHQ9_Tot_Score','GAD7_Tot_Score','DHI_Tot_Score','FGA','SOT','LOC','AOC','PTA','TimeInService','symp_tot','Total_C','Age','Age_lbl')%>%
filter(complete.cases(.))
auc<-NULL
winvar<- function(variable,groupvariable){
levels <- levels(as.factor(groupvariable[[1]]))
numlevels<-length(levels)
numtotal <- 0
denomtotal <- 0
for (i in 1:numlevels) {
leveldata <- variable[groupvariable==levels[i]]
levellength <- length(leveldata)
sdi <- sds(leveldata)
numi <- (levellength - 1)*(sdi * sdi)
denomi <- levellength
numtotal <- numtotal + numi
denomtotal <- denomtotal + denomi     }
Vw <- numtotal / (denomtotal - numlevels)
return(Vw)
} #Within subject variation (variation between individual responses and group mean)
btwvar <- function(variable,groupvariable){
levels <- levels(as.factor(groupvariable[[1]]))
numlevels <- length(levels)
grandmean <- colMeans(variable)
numtotal <- 0
for (i in 1:numlevels){
levelidata <- variable[groupvariable==levels[i]]
levelilength <- length(levelidata)
meani <- means(levelidata)
sdi <- sds(levelidata)
numi <- levelilength * ((meani - grandmean)^2)
numtotal <- numtotal + numi     }
Vb <- numtotal / (numlevels - 1)
Vb <- Vb[[1]]
return(Vb)
} #btwn subject variation (variation between mean groups and the grand mean)
seps<-function(var,groupvariable){
variables<-as.data.frame(var)
nvar<-length(variables)
vnames<-colnames(variables)
for(i in 1:nvar){
vari<-variables[i]
variablename<-vnames[i]
Vw<-round(winvar(vari,groupvariable),5)
Vb<-round(btwvar(vari,groupvariable),5)
sep<-round(Vb/Vw,5)
print(paste("Var",variablename,"vw=",Vw,"vb=",Vb,"separation=",sep))
}
}
#seps(aov_data[1:23],aov_data[26])
#Treatment Effects per grouping (show which has the greatest treatment effect)
# dataframe<-aov_data[1:13]
# df1<-as.matrix(subset(aov_data[1:13],aov_data$I=="1"))
# df2<-as.matrix(subset(aov_data[1:13],aov_data$I=="0"))
# gm<-colMeans(dataframe)
# m1<-colMeans(df1)
# m2<-means(df2)
# t1<-m1-gm
# t2<-m2-gm
# d<-t1-t2
#
# w<-(nrow(df1)-1)*(var(df1)+var(df2))
#
# t<-qt(1-(0.05/ncol(df1)*length(unique(aov_data$I)))*(length(unique(aov_data$I))-1),nrow(aov_data)-length(unique(aov_data$I)))
#
# #u<-d+t*sqrt((1/nrow(df1)+1/nrow(df2))*(1/(nrow(dataframe)-2))*diag(w))
# #l<-d-t*sqrt((1/nrow(df1)+1/nrow(df2))*(1/(nrow(dataframe)-2))*diag(w))
#
# u<-d+t*sqrt((((1/nrow(df1))+(1/nrow(df2)))*(w[i,i])/(nrow(aov_data)-length(unique(aov_data$I)))))
# l<-d-t*sqrt((((1/nrow(df1))+(1/nrow(df2)))*(w[i,i])/(nrow(aov_data)-length(unique(aov_data$I)))))
#
# ci<-rbind(l,u)
# ci
#
# SSPC<-function(dataframe,group,nvar){
#   df1<-as.matrix(subset(dataframe,group=="1")) #subset
#   df2<-as.matrix(subset(dataframe,group=="0")) #subset
#   gm<-colMeans(dataframe) #grandmeans for entire df variables
#   m1<-means(df1) #subset means
#   m2<-means(df2) #subset means
#   t1<-m1-gm #mean treatment effect for group 1
#   t2<-m2-gm #mean treatment effect for group 2
#   d<-t1-t2 #difference in treatment effects
#   w<-(nrow(df1)-1)*(var(df1)+var(df2)) #compute SSPC matrix for within group variance (error)
#
#   t<-qt(1-(0.05/nvar*length(unique(group)))*(length(unique(group))-1),nrow(df1)-length(unique(group))) #create multipler based off of t distribution
#   u<-d+t*sqrt(((1/nrow(df1))+(1/nrow(df2)))*(w)/(nrow(dataframe)-length(unique(group)))) #Create upper limit for confidence interval
#   l<-d-t*sqrt(((1/nrow(df1))+(1/nrow(df2)))*(w)/(nrow(dataframe)-length(unique(group)))) #Create lower limit for confidence interval (note w is applied through each iteration - no diag computation necessary)
#
#   ci<-rbind(c(l,d,u)) #combine by columns for viewing
#   ci #view
# }
#
# SSPC(aov_data[2],aov_data$I,1) #testing function
# Chunk 11: reg
formula<-Total_C~ABC_Tot_Score+NSI_Tot_Score+PCLM_Tot_Score+PHQ9_Tot_Score+GAD7_Tot_Score+DHI_Tot_Score+FGA+SOT+LOC+AOC+PTA+TimeInService+symp_tot
lm_d<-final_df%>%
select('ABC_Tot_Score','NSI_Tot_Score','PCLM_Tot_Score','PHQ9_Tot_Score','GAD7_Tot_Score','DHI_Tot_Score','FGA','SOT','LOC','AOC','PTA','TimeInService','symp_tot','Total_C')%>%
filter(complete.cases(.))
lm_d[1:13]<-scale(lm_d[1:13])
fit<-lm(formula,data=lm_d)
step<-MASS::stepAIC(fit,direction="both",trace=FALSE)
step$anova
RLIM<-relaimpo::calc.relimp(fit,type=c("lmg","last","first","pratt"),rela=TRUE) #Examining relative importance of variables in relation to Total_C
RLIM@lmg
#RLIM@ave.coeffs
#lmg=R2 contribution averaged over ordering among regressors
#last=userfulness - contirbution at stage
#first=squared covariance between y and variable
#pratt=std coefficient and correlation
#Examining Particular Question responses
formula<-Total_C~NSI_Q1+NSI_Q2+NSI_Q3+NSI_Q4+NSI_Q5+NSI_Q6+P+Fu+E+ABC_Tot_Score+FGA+SOT+LOC+AOC+PTA+TimeInService+symp_tot
lm_d<-dhi%>%
select('NSI_Q1','NSI_Q2','NSI_Q3','NSI_Q4','NSI_Q5','P','Fu','E','Total_C','NSI_Q6','ABC_Tot_Score','FGA','SOT','LOC','AOC','PTA','TimeInService','symp_tot')%>%
filter(complete.cases(.))
lm_d[1:18]<-scale(lm_d[1:18])
fit<-lm(formula,data=lm_d)
step<-MASS::stepAIC(fit,direction="both",trace=FALSE)
step$anova
RLIM<-relaimpo::calc.relimp(fit,type=c("lmg","last","first","pratt"),rela=TRUE) #Examining relative importance of variables in relation to Total_C
RLIM@lmg
#RLIM@ave.coeffs
# Chunk 12: Logistic
aov_data<-dhi%>%
select('NSI_Q1','NSI_Q2','NSI_Q3','NSI_Q4','NSI_Q5','P','Fu','E','Total_C','NSI_Q6','ABC_Tot_Score','NSI_Tot_Score','PCLM_Tot_Score','PHQ9_Tot_Score','GAD7_Tot_Score','DHI_Tot_Score','FGA','SOT','LOC','AOC','PTA','TimeInService','symp_tot','Total_C','Age','Age_lbl')%>%
filter(complete.cases(.))
auc<-NULL
for (i in 1:9){
Cutoff<-paste0(quo_name(i),"")
aov_data$I<-ifelse(aov_data$Total_C>=i,1,0)
logic_fit<-glm(I~ABC_Tot_Score+NSI_Tot_Score+PCLM_Tot_Score+PHQ9_Tot_Score+GAD7_Tot_Score+DHI_Tot_Score+FGA+SOT+LOC+AOC+PTA+TimeInService+symp_tot,data=aov_data,family="binomial")
prob<-predict(logic_fit,type=c("response"))
aov_data$prob=prob
g<-pROC::roc(I~prob,data=aov_data)
#plot(g)
a<-cbind(Cutoff,round(g$auc,4))
auc<-rbind(auc,a)
}
#Full Model
print(auc)
auc<-NULL
for (i in 1:9){
Cutoff<-paste0(quo_name(i),"")
aov_data$I<-ifelse(aov_data$Total_C>=i,1,0)
logic_fit<-glm(I~SOT+NSI_Tot_Score+LOC,data=aov_data,family="binomial")
prob<-predict(logic_fit,type=c("response"))
aov_data$prob=prob
g<-pROC::roc(I~prob,data=aov_data)
#plot(g)
a<-cbind(Cutoff,round(g$auc,4))
auc<-rbind(auc,a)
}
#Model:TOTAL_CENTRAL~SOT+NSI_Tot_Score+LOC
print(auc)
auc<-NULL
for (i in 1:9){
Cutoff<-paste0(quo_name(i),"")
aov_data$I<-ifelse(aov_data$Total_C>=i,1,0)
logic_fit<-glm(I~SOT+NSI_Q2+NSI_Q4+LOC,data=aov_data,family="binomial")
prob<-predict(logic_fit,type=c("response"))
aov_data$prob=prob
g<-pROC::roc(I~prob,data=aov_data)
#plot(g)
a<-cbind(Cutoff,round(g$auc,4))
auc<-rbind(auc,a)
}
#Model:TOTAL_CENTRAL~SOT+NSI_Q2+NSI_Q4+LOC
print(auc)
# Chunk 13: AOV testing
aov_list<-NULL
for (i in 1:9){
aov_data$I<-ifelse(aov_data$Total_C>=i,"1","0")
name<-paste0(quo_name(i),"")
i<-round(summary(manova(cbind(ABC_Tot_Score,NSI_Tot_Score,PCLM_Tot_Score,PHQ9_Tot_Score,GAD7_Tot_Score,DHI_Tot_Score,FGA,SOT,LOC,AOC,PTA,symp_tot)~I,data=aov_data))$stats[11],5)
test<-cbind(name,i)
aov_list<-rbind(aov_list,test)}
#Model: ABC_Tot_Score,NSI_Tot_Score,PCLM_Tot_Score,PHQ9_Tot_Score,GAD7_Tot_Score,DHI_Tot_Score,FGA,SOT,LOC,AOC,PTA,symp_tot~TOTAL_CENTRAL
print(aov_list)
#
# for (i in 1:9){
#   aov_data$I<-ifelse(aov_data$Total_C>=i,"1","0")
#   name<-paste0(quo_name(i),"")
#   i<-summary(manova(cbind(ABC_Tot_Score,NSI_Tot_Score,PCLM_Tot_Score,PHQ9_Tot_Score,GAD7_Tot_Score,DHI_Tot_Score,FGA,SOT,LOC,AOC,PTA,symp_tot)~I+Age,data=aov_data))
#   print(i)
# }
aov_list<-NULL
for (i in 1:9) {
aov_data$I<-ifelse(aov_data$Total_C>=i,"1","0")
name<-paste0(quo_name(i),"")
i<-round(summary(manova(cbind(NSI_Tot_Score,SOT,LOC)~I,data=aov_data))$stats[11],5)
test<-cbind(name,i)
aov_list<-rbind(aov_list,test) }
#Model: NSI_Tot_Score+SOT+LOC~TOTAL_CENTRAL
print(aov_list)
aov_list<-NULL
for (i in 1:9) {
aov_data$I<-ifelse(aov_data$Total_C>=i,"1","0")
name<-paste0(quo_name(i),"")
i<-round(summary(manova(cbind(NSI_Q2,NSI_Q4,SOT,LOC)~I,data=aov_data))$stats[11],5)
test<-cbind(name,i)
aov_list<-rbind(aov_list,test) }
#Model: NSI_Q2+NSI_Q4+SOT+LOC~TOTAL_CENTRAL
print(aov_list)
# Chunk 14: 3
dhi$I<-ifelse(dhi$Total_C>=3,"1","0")
vestib<-dhi[,c(2:34,205)]
scores<-dhi[,c(38,40,68,72,83,109,88,89,90,91,92,144,163,202:205)]
dem<-dhi[,c(164:171,41:48,205)]
dm<-dem%>%
filter(!is.na(I))%>%
select(-c(Gender,Service,Special_stat,TypeParticipant,Motion_Sensitivity_Present:Syncope_pre_syncope_Present,Age_lbl))%>%
group_by(I)%>%
summarise_all(means)
kable(dm)
ss<-scores%>%
filter(!is.na(I))%>%
group_by(I)%>%
summarise_all(means)
kable(ss)
colnames(vestib)<-sub("Vestibular_Oculomotor_","",colnames(vestib))
colnames(vestib)<-sub("Vestibular_Positioning_","",colnames(vestib))
colnames(vestib)<-sub("_Abnormal","",colnames(vestib))
vt<-vestib%>%
filter(!is.na(I))%>%
group_by(I)%>%
summarise_all(funs(sum(.=="C",na.rm=TRUE)))
vt<-melt(vt)
vt$value<-as.numeric(vt$value)
vt$Mean<-ifelse(vt$I=="1",round(vt$value/168,3),round(vt$value/558,3))
vt<-vt%>%filter(!value==0)%>%arrange(-Mean)
vt<-dcast(vt,variable~I,value.var = "Mean")
kable(vt)
mnv<-manova(cbind(SOT,FGA, ABC_Tot_Score,DHI_Tot_Score,GAD7_Tot_Score, NSI_Tot_Score,NSI_Q2, NSI_Q3, NSI_Q4,NSI_Q5,NSI_Q6, PCLM_Tot_Score, PHQ9_Tot_Score, P, Fu)~I,data=scores)
summary(mnv)
summary.aov(mnv)
mnv<-manova(cbind(NSI_Q2,NSI_Q4,SOT,LOC)~I,data=dhi)
summary(mnv)
summary.aov(mnv)
# Chunk 15: 4
dhi$I<-ifelse(dhi$Total_C>=4,"1","0")
vestib<-dhi[,c(2:34,205)]
scores<-dhi[,c(38,40,68,72,83,109,88,89,90,91,92,144,163,202:205)]
dem<-dhi[,c(164:171,41:48,205)]
dm<-dem%>%
filter(!is.na(I))%>%
select(-c(Gender,Service,Special_stat,TypeParticipant,Motion_Sensitivity_Present:Syncope_pre_syncope_Present,Age_lbl))%>%
group_by(I)%>%
summarise_all(means)
kable(dm)
ss<-scores%>%
filter(!is.na(I))%>%
group_by(I)%>%
summarise_all(means)
kable(ss)
colnames(vestib)<-sub("Vestibular_Oculomotor_","",colnames(vestib))
colnames(vestib)<-sub("Vestibular_Positioning_","",colnames(vestib))
colnames(vestib)<-sub("_Abnormal","",colnames(vestib))
vt<-vestib%>%
filter(!is.na(I))%>%
group_by(I)%>%
summarise_all(funs(sum(.=="C",na.rm=TRUE)))
vt<-melt(vt)
vt$value<-as.numeric(vt$value)
vt$Mean<-ifelse(vt$I=="1",round(vt$value/168,3),round(vt$value/558,3))
vt<-vt%>%filter(!value==0)%>%arrange(-Mean)
vt<-dcast(vt,variable~I,value.var = "Mean")
vt$delta<-vt$`0`-vt$`1`
kable(vt)
mnv<-manova(cbind(SOT,FGA, ABC_Tot_Score,DHI_Tot_Score,GAD7_Tot_Score,NSI_Q2, NSI_Q3, NSI_Q4,NSI_Q5,NSI_Q6, PCLM_Tot_Score, PHQ9_Tot_Score, P,Fu)~I,data=scores)
summary(mnv)
summary.aov(mnv)
mnv<-manova(cbind(SOT,FGA,ABC_Tot_Score,DHI_Tot_Score,GAD7_Tot_Score,NSI_Tot_Score,PCLM_Tot_Score,PHQ9_Tot_Score,P,Fu)~I,data=scores)
#summary(mnv)
#summary.aov(mnv)
mnv<-manova(cbind(NSI_Q2,NSI_Q4,SOT,LOC)~I,data=dhi)
summary(mnv)
summary.aov(mnv)
# Chunk 16: 5
dhi$I<-ifelse(dhi$Total_C>=5,"1","0")
vestib<-dhi[,c(2:34,205)]
scores<-dhi[,c(38,40,68,72,83,109,88,89,90,91,92,144,163,202:205)]
dem<-dhi[,c(164:171,41:48,205)]
dm<-dem%>%
filter(!is.na(I))%>%
select(-c(Gender,Service,Special_stat,TypeParticipant,Motion_Sensitivity_Present:Syncope_pre_syncope_Present,Age_lbl))%>%
group_by(I)%>%
summarise_all(means)
kable(dm)
ss<-scores%>%
filter(!is.na(I))%>%
group_by(I)%>%
summarise_all(means)
kable(ss)
colnames(vestib)<-sub("Vestibular_Oculomotor_","",colnames(vestib))
colnames(vestib)<-sub("Vestibular_Positioning_","",colnames(vestib))
colnames(vestib)<-sub("_Abnormal","",colnames(vestib))
vt<-vestib%>%
filter(!is.na(I))%>%
group_by(I)%>%
summarise_all(funs(sum(.=="C",na.rm=TRUE)))
vt<-melt(vt)
vt$value<-as.numeric(vt$value)
vt$Mean<-ifelse(vt$I=="1",round(vt$value/168,3),round(vt$value/558,3))
vt<-vt%>%filter(!value==0)%>%arrange(-Mean)
vt<-dcast(vt,variable~I,value.var = "Mean")
kable(vt)
mnv<-manova(cbind(SOT,FGA, ABC_Tot_Score,DHI_Tot_Score,GAD7_Tot_Score, NSI_Tot_Score,NSI_Q2, NSI_Q3, NSI_Q4,NSI_Q5,NSI_Q6, PCLM_Tot_Score, PHQ9_Tot_Score, P, Fu)~I,data=scores)
summary(mnv)
summary.aov(mnv)
mnv<-manova(cbind(NSI_Q2,NSI_Q4,SOT,LOC)~I,data=dhi)
summary(mnv)
summary.aov(mnv)
head(AM)
head(am)
dhi$am<-ifelse(dhi$ID %in% am,"AM","")
dhi$am<-ifelse(dhi$ID %in% am,"am","")
dhi$pm<-ifelse(dhi$ID %in% pm,"pm","")
dhi$pam<-ifelse(dhi$id %in% pam,"pam","")
dhi$pam<-ifelse(dhi$ID %in% pam,"pam","")
table(dhi$pam)
table(dhi$am)
table(dhi$pm)
str(am)
str(dhi$ID)
dhi$am<-ifelse(dhi$ID %in% am,"am","")
table(dhi$am)
dhi$am
names(am)
dhi$am<-ifelse(dhi$ID %in% am$ID,"am","")
names(am)
table(dhi$am)
dhi$am<-ifelse(dhi$ID %in% am$ID,"am","")
dhi$pm<-ifelse(dhi$ID %in% pm$ID,"pm","")
dhi$pam<-ifelse(dhi$ID %in% pam$ID,"pam","")
table(dhi$am)
sum(dhi$am=="am")
sum(dhi$pam=="pam")
sum(dhi$pm=="pm")
table(dhi$am,dhi$Total_C)
table(dhi$pam,dhi$Total_C)
table(dhi$pm,dhi$Total_C)
library(dplyr)
#library(xlsx)
library(tidyr)
library(reshape2)
library(ggplot2)
library(knitr)
library(rmarkdown)
library(DT)
library(car)
library(effsize)
library(plotly)
#Set Global Chunk Options
knitr::opts_chunk$set(echo = TRUE)
opts_chunk$set(fig.width=8,fig.height=8,echo=TRUE,warning=FALSE,message=FALSE)
#Load Datasets
load("final_df.RData")
means<-function(x){
mean(x,na.rm=TRUE)}
sds<-function(x){
sd(x,na.rm=TRUE)}
gender<-final_df%>%group_by(Gender)%>%summarise(N=n())%>%mutate(Percent=round(N/sum(N)*100,2))%>%arrange(desc(N))
service<-final_df%>%group_by(Service)%>%summarise(N=n())%>%mutate(Percent=round(N/sum(N)*100,2))%>%arrange(desc(N))
final_df$Age_lbl<-ifelse(final_df$Age>18&final_df$Age<25,"20 to 24",
ifelse(final_df$Age>24&final_df$Age<30,"25 to 29",
ifelse(final_df$Age>29&final_df$Age<35,"30 to 34",
ifelse(final_df$Age>34&final_df$Age<40,"35 to 39",
ifelse(final_df$Age>39&final_df$Age<45,"40 to 44",
ifelse(final_df$Age>44&final_df$Age<50,"45 to 49",
ifelse(final_df$Age>49&final_df$Age<55,"50 to 54",
ifelse(final_df$Age>54,"55 to 60",NA))))))))
final_df$Age_lbl<-factor(final_df$Age_lbl,levels=c("20 to 24","25 to 29", "30 to 34", "35 to 39", "40 to 44", "45 to 49", "50 to 54", "55 to 60" ))
age<-final_df%>%group_by(Age_lbl)%>%summarise(N=n())%>%mutate(Percent=round(N/sum(N)*100,2))
final_df$symp_tot<-rowSums(final_df[,c(41:45)]=="X")
final_df$SOT<-as.numeric(final_df$SOT)
final_df$FGA<-sub("/30","",final_df$FGA)
final_df$FGA<-as.numeric(final_df$FGA)
#DHI_ext<-read.xlsx("DHI_Extension.xlsx",header=TRUE,sheetName="DHI")
#save(DHI_ext,file="DHI_ext.RData")
load("DHI_ext.RData")
load("pt_data.RData")
load("pt_meds.RData")
#Set Medication Lists
pm<-pt_meds%>%
filter(Time=="PM")%>%
filter(Control=="C")%>%
distinct(ID)
am<-pt_meds%>%
filter(Time=="AM")%>%
filter(Control=="C")%>%
distinct(ID)
pam<-pt_meds%>%
filter(Control=="C")%>%
distinct(ID)
library(dplyr)
#library(xlsx)
library(tidyr)
library(reshape2)
library(ggplot2)
library(knitr)
library(rmarkdown)
library(DT)
library(car)
library(effsize)
library(plotly)
#Set Global Chunk Options
knitr::opts_chunk$set(echo = TRUE)
opts_chunk$set(fig.width=8,fig.height=8,echo=TRUE,warning=FALSE,message=FALSE)
#Load Datasets
load("final_df.RData")
means<-function(x){
mean(x,na.rm=TRUE)}
sds<-function(x){
sd(x,na.rm=TRUE)}
gender<-final_df%>%group_by(Gender)%>%summarise(N=n())%>%mutate(Percent=round(N/sum(N)*100,2))%>%arrange(desc(N))
service<-final_df%>%group_by(Service)%>%summarise(N=n())%>%mutate(Percent=round(N/sum(N)*100,2))%>%arrange(desc(N))
final_df$Age_lbl<-ifelse(final_df$Age>18&final_df$Age<25,"20 to 24",
ifelse(final_df$Age>24&final_df$Age<30,"25 to 29",
ifelse(final_df$Age>29&final_df$Age<35,"30 to 34",
ifelse(final_df$Age>34&final_df$Age<40,"35 to 39",
ifelse(final_df$Age>39&final_df$Age<45,"40 to 44",
ifelse(final_df$Age>44&final_df$Age<50,"45 to 49",
ifelse(final_df$Age>49&final_df$Age<55,"50 to 54",
ifelse(final_df$Age>54,"55 to 60",NA))))))))
final_df$Age_lbl<-factor(final_df$Age_lbl,levels=c("20 to 24","25 to 29", "30 to 34", "35 to 39", "40 to 44", "45 to 49", "50 to 54", "55 to 60" ))
age<-final_df%>%group_by(Age_lbl)%>%summarise(N=n())%>%mutate(Percent=round(N/sum(N)*100,2))
final_df$symp_tot<-rowSums(final_df[,c(41:45)]=="X")
final_df$SOT<-as.numeric(final_df$SOT)
final_df$FGA<-sub("/30","",final_df$FGA)
final_df$FGA<-as.numeric(final_df$FGA)
#DHI_ext<-read.xlsx("DHI_Extension.xlsx",header=TRUE,sheetName="DHI")
#save(DHI_ext,file="DHI_ext.RData")
load("DHI_ext.RData")
load("pt_data.RData")
load("pt_meds.RData")
#Set Medication Lists
pm<-pt_meds%>%
filter(Time=="PM")%>%
filter(Control=="C")%>%
distinct(ID)
am<-pt_meds%>%
filter(Time=="AM")%>%
filter(Control=="C")%>%
distinct(ID)
pam<-pt_meds%>%
filter(Control=="C")%>%
distinct(ID)
